from aip import AipFace
import cv2
import matplotlib.pyplot as plt
import math
import base64


# 定义常量
APP_ID = '15647216'
API_KEY = 'lDsbbF6YmdtpdwdjZyIz08aF'
SECRET_KEY = '2MBLkXYOVmGUjqPEfxKD8Wwz3lwzLSoW'

# 初始化AipFace对象
aipFace = AipFace(APP_ID, API_KEY, SECRET_KEY)

# 读取图片

# image = "http://n1.itc.cn/img8/wb/recom/2017/04/19/149256623627782055.JPEG"
# imageType = "URL"


# camera = cv2.VideoCapture(0) #这里是利用摄像头采集，打开摄像头操作
# while camera.isOpened:
#     #利用read方法读取摄像头的某一帧图片
#     (ok, sample_image) = camera.read()
#     base64_data = base64.b64encode(sample_image)
#     image = str(base64_data, 'utf-8')
#     imageType = "BASE64"
#     if not ok:
#         break
#     options = {}
#     options["face_field"] = "age"
#     options["max_face_num"] = 10
#     options["face_type"] = "LIVE"
#
#     # 调用人脸属性检测接口
#     result = aipFace.detect(image, imageType, options)
#
#     print(result)
#     print(type(result))

    # 读取原图
    # cap = cv2.VideoCapture(image)
    # ret, img = cap.read()
    # img = camera.read()

    # # 解析位置信息
    # face_num = result['result']['face_num']

#     for num in range(0, int(face_num)):
#         print(num)
#         location = result['result']['face_list'][num - 1]['location']
#         # print(location)
#         # print(location['face_list'][0])
#
#         Theta = location['rotation'] / 60  ### 注意：为啥是60度，自己多次测试的结果，必须得弄清楚rotation啥意思，相对于哪里的旋转角度
#         A = (int(location['left']), int(location['top']))
#         B = (int(location['left']) + int(location['width'] * math.cos(Theta)),
#              int(location['top']) + int(location['width'] * math.sin(Theta)))
#         AC_Len = math.sqrt(location['width'] ** 2 + location['height'] ** 2)
#         AC_Theta = math.atan(location['height'] / location['width']) + location['rotation'] / 60  ####或者是？？？
#         C = (
#             int(location['left']) + int(AC_Len * math.cos(AC_Theta)),
#             int(location['top']) + int(AC_Len * math.sin(AC_Theta)))
#         D = (int(location['left']) - int(location['height'] * math.sin(Theta)),
#              int(location['top']) + int(location['height'] * math.cos(Theta)))
#         cv2.line(img, A, B, (0, 0, 255), 2)
#         cv2.line(img, B, C, (0, 0, 255), 2)
#         cv2.line(img, C, D, (0, 0, 255), 2)
#         cv2.line(img, D, A, (0, 0, 255), 2)
#         cv2.imshow('img', img)
#         # left_top = (int(location['left']),int(location['top']))
#         # right_bottom = (left_top[0]+int(location['width']),left_top[1]+int(location['height']))
#         # cv2.rectangle(img,left_top, right_bottom, (0,0,255),2)
#
#     #    faces = face_patterns.detectMultiScale(sample_image,scaleFactor=1.1,minNeighbors=5,minSize=(80, 80))
# #    for (x, y, w, h) in faces:
# #        cv2.rectangle(sample_image, (x, y), (x+w, y+h), (0, 255, 0), 2)
# #    cv2.imshow('face', sample_image);
#     if cv2.waitKey(10)&0xFF==ord('q'):#按下q，退出循环
#         break
# camera.release()
#
#
filepath = "C:\\Users\\Administrator\\PycharmProjects\\untitled\\12.jpg"
with open(filepath, "rb") as fp:
    base64_data = base64.b64encode(fp.read())
image = str(base64_data, 'utf-8')
imageType = "BASE64"

# 定义参数变量

options = {}
options["face_field"] = "age"
options["max_face_num"] = 10
options["face_type"] = "LIVE"

# 调用人脸属性检测接口
result = aipFace.detect(image, imageType, options)

print(result)
print(type(result))

# 读取原图
# cap = cv2.VideoCapture(image)
# ret, img = cap.read()
img = cv2.imread(filepath)

# 解析位置信息
face_num = result['result']['face_num']

for num in range(0, int(face_num)):
    print(num)
    location = result['result']['face_list'][num - 1]['location']
    # print(location)
    # print(location['face_list'][0])

    Theta = location['rotation'] / 60  ### 注意：为啥是60度，自己多次测试的结果，必须得弄清楚rotation啥意思，相对于哪里的旋转角度
    A = (int(location['left']), int(location['top']))
    B = (int(location['left']) + int(location['width'] * math.cos(Theta)),
         int(location['top']) + int(location['width'] * math.sin(Theta)))
    AC_Len = math.sqrt(location['width'] ** 2 + location['height'] ** 2)
    AC_Theta = math.atan(location['height'] / location['width']) + location['rotation'] / 60  ####或者是？？？
    C = (
    int(location['left']) + int(AC_Len * math.cos(AC_Theta)), int(location['top']) + int(AC_Len * math.sin(AC_Theta)))
    D = (int(location['left']) - int(location['height'] * math.sin(Theta)),
         int(location['top']) + int(location['height'] * math.cos(Theta)))
    cv2.line(img, A, B, (0, 0, 255), 1)
    cv2.line(img, B, C, (0, 0, 255), 1)
    cv2.line(img, C, D, (0, 0, 255), 1)
    cv2.line(img, D, A, (0, 0, 255), 1)

    # left_top = (int(location['left']),int(location['top']))
    # right_bottom = (left_top[0]+int(location['width']),left_top[1]+int(location['height']))
    # cv2.rectangle(img,left_top, right_bottom, (0,0,255),2)

cv2.imshow('img', img)
cv2.waitKey(0)

plt.imshow(img, 'gray')
plt.show()
